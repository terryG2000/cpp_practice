Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/g++ 
Build flags: 
Id flags:  

The output was:
1
CMakeCCompilerId.c:2:3: error: #error "A C++ compiler has been selected for C."
 # error "A C++ compiler has been selected for C."
   ^~~~~


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/g++ 
Build flags: 
Id flags: -c 

The output was:
1
CMakeCCompilerId.c:2:3: error: #error "A C++ compiler has been selected for C."
 # error "A C++ compiler has been selected for C."
   ^~~~~


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/g++ 
Build flags: 
Id flags: -Aa 

The output was:
1
<command-line>:0:1: error: missing '(' after predicate
CMakeCCompilerId.c:2:3: error: #error "A C++ compiler has been selected for C."
 # error "A C++ compiler has been selected for C."
   ^~~~~


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/g++ 
Build flags: 
Id flags: -D__CLASSIC_C__ 

The output was:
1
CMakeCCompilerId.c:2:3: error: #error "A C++ compiler has been selected for C."
 # error "A C++ compiler has been selected for C."
   ^~~~~
CMakeCCompilerId.c:429:64: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
 char const* info_compiler = "INFO" ":" "compiler[" COMPILER_ID "]";
                                                                ^~~
CMakeCCompilerId.c:758:64: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
 char const* info_platform = "INFO" ":" "platform[" PLATFORM_ID "]";
                                                                ^~~
CMakeCCompilerId.c:759:60: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
 char const* info_arch = "INFO" ":" "arch[" ARCHITECTURE_ID "]";
                                                            ^~~
CMakeCCompilerId.c:781:44: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
   "INFO" ":" "standard_default[" C_VERSION "]";
                                            ^~~
CMakeCCompilerId.c:791:1: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
 "]";
 ^~~
CMakeCCompilerId.c:799:10: error: cannot declare ‘::main’ to be a global variable
 int main(argc, argv) int argc; char *argv[];
          ^~~~
CMakeCCompilerId.c:799:10: error: ‘argc’ was not declared in this scope
CMakeCCompilerId.c:799:16: error: ‘argv’ was not declared in this scope
 int main(argc, argv) int argc; char *argv[];
                ^~~~
CMakeCCompilerId.c:799:20: error: expression list treated as compound expression in initializer [-fpermissive]
 int main(argc, argv) int argc; char *argv[];
                    ^
CMakeCCompilerId.c:799:38: error: storage size of ‘argv’ isn’t known
 int main(argc, argv) int argc; char *argv[];
                                      ^~~~
CMakeCCompilerId.c:803:1: error: expected unqualified-id before ‘{’ token
 {
 ^


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/g++ 
Build flags: 
Id flags: --target=arm-arm-none-eabi;-mcpu=cortex-m3 

The output was:
1
g++: warning: ‘-mcpu=’ is deprecated; use ‘-mtune=’ or ‘-march=’ instead
g++: error: unrecognized command line option ‘--target=arm-arm-none-eabi’


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/g++ 
Build flags: 
Id flags: -c;-I__does_not_exist__ 

The output was:
1
CMakeCCompilerId.c:2:3: error: #error "A C++ compiler has been selected for C."
 # error "A C++ compiler has been selected for C."
   ^~~~~


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/g++ 
Build flags: 
Id flags:  

The output was:
1
CMakeCCompilerId.c:2:3: error: #error "A C++ compiler has been selected for C."
 # error "A C++ compiler has been selected for C."
   ^~~~~


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/g++ 
Build flags: 
Id flags: -c 

The output was:
1
CMakeCCompilerId.c:2:3: error: #error "A C++ compiler has been selected for C."
 # error "A C++ compiler has been selected for C."
   ^~~~~


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/g++ 
Build flags: 
Id flags: -Aa 

The output was:
1
<command-line>:0:1: error: missing '(' after predicate
CMakeCCompilerId.c:2:3: error: #error "A C++ compiler has been selected for C."
 # error "A C++ compiler has been selected for C."
   ^~~~~


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/g++ 
Build flags: 
Id flags: -D__CLASSIC_C__ 

The output was:
1
CMakeCCompilerId.c:2:3: error: #error "A C++ compiler has been selected for C."
 # error "A C++ compiler has been selected for C."
   ^~~~~
CMakeCCompilerId.c:429:64: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
 char const* info_compiler = "INFO" ":" "compiler[" COMPILER_ID "]";
                                                                ^~~
CMakeCCompilerId.c:758:64: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
 char const* info_platform = "INFO" ":" "platform[" PLATFORM_ID "]";
                                                                ^~~
CMakeCCompilerId.c:759:60: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
 char const* info_arch = "INFO" ":" "arch[" ARCHITECTURE_ID "]";
                                                            ^~~
CMakeCCompilerId.c:781:44: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
   "INFO" ":" "standard_default[" C_VERSION "]";
                                            ^~~
CMakeCCompilerId.c:791:1: warning: ISO C++ forbids converting a string constant to ‘char*’ [-Wwrite-strings]
 "]";
 ^~~
CMakeCCompilerId.c:799:10: error: cannot declare ‘::main’ to be a global variable
 int main(argc, argv) int argc; char *argv[];
          ^~~~
CMakeCCompilerId.c:799:10: error: ‘argc’ was not declared in this scope
CMakeCCompilerId.c:799:16: error: ‘argv’ was not declared in this scope
 int main(argc, argv) int argc; char *argv[];
                ^~~~
CMakeCCompilerId.c:799:20: error: expression list treated as compound expression in initializer [-fpermissive]
 int main(argc, argv) int argc; char *argv[];
                    ^
CMakeCCompilerId.c:799:38: error: storage size of ‘argv’ isn’t known
 int main(argc, argv) int argc; char *argv[];
                                      ^~~~
CMakeCCompilerId.c:803:1: error: expected unqualified-id before ‘{’ token
 {
 ^


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/g++ 
Build flags: 
Id flags: --target=arm-arm-none-eabi;-mcpu=cortex-m3 

The output was:
1
g++: warning: ‘-mcpu=’ is deprecated; use ‘-mtune=’ or ‘-march=’ instead
g++: error: unrecognized command line option ‘--target=arm-arm-none-eabi’


Compiling the C compiler identification source file "CMakeCCompilerId.c" failed.
Compiler: /usr/bin/g++ 
Build flags: 
Id flags: -c;-I__does_not_exist__ 

The output was:
1
CMakeCCompilerId.c:2:3: error: #error "A C++ compiler has been selected for C."
 # error "A C++ compiler has been selected for C."
   ^~~~~


Checking whether the C compiler is IAR using "" did not match "IAR .+ Compiler":
g++: fatal error: no input files
compilation terminated.
Checking whether the C compiler is IAR using "" did not match "IAR .+ Compiler":
g++: fatal error: no input files
compilation terminated.
Detecting C compiler ABI info failed to compile with the following output:
Change Dir: /home/rk3399/cpp_practice/cmake-build-debug/CMakeFiles/CMakeTmp

Run Build Command(s):/home/rk3399/.cache/JetBrains/RemoteDev/dist/71861dbc5a9e2_CLion-2022.2.1/bin/ninja/linux/ninja cmTC_9cfa2 && [1/2] Building C object CMakeFiles/cmTC_9cfa2.dir/CMakeCCompilerABI.c.o
FAILED: CMakeFiles/cmTC_9cfa2.dir/CMakeCCompilerABI.c.o 
/usr/bin/g++    -o CMakeFiles/cmTC_9cfa2.dir/CMakeCCompilerABI.c.o -c /home/rk3399/.cache/JetBrains/RemoteDev/dist/71861dbc5a9e2_CLion-2022.2.1/bin/cmake/linux/share/cmake-3.23/Modules/CMakeCCompilerABI.c
/home/rk3399/.cache/JetBrains/RemoteDev/dist/71861dbc5a9e2_CLion-2022.2.1/bin/cmake/linux/share/cmake-3.23/Modules/CMakeCCompilerABI.c:2:4: error: #error "A C++ compiler has been selected for C."
 #  error "A C++ compiler has been selected for C."
    ^~~~~
ninja: build stopped: subcommand failed.




Determining if the C compiler works failed with the following output:
Change Dir: /home/rk3399/cpp_practice/cmake-build-debug/CMakeFiles/CMakeTmp

Run Build Command(s):/home/rk3399/.cache/JetBrains/RemoteDev/dist/71861dbc5a9e2_CLion-2022.2.1/bin/ninja/linux/ninja cmTC_39552 && [1/2] Building C object CMakeFiles/cmTC_39552.dir/testCCompiler.c.o
FAILED: CMakeFiles/cmTC_39552.dir/testCCompiler.c.o 
/usr/bin/g++    -o CMakeFiles/cmTC_39552.dir/testCCompiler.c.o -c /home/rk3399/cpp_practice/cmake-build-debug/CMakeFiles/CMakeTmp/testCCompiler.c
/home/rk3399/cpp_practice/cmake-build-debug/CMakeFiles/CMakeTmp/testCCompiler.c:2:3: error: #error "The CMAKE_C_COMPILER is set to a C++ compiler"
 # error "The CMAKE_C_COMPILER is set to a C++ compiler"
   ^~~~~
ninja: build stopped: subcommand failed.



